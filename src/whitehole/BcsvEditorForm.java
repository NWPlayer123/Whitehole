/*
    Copyright 2012 The Whitehole team

    This file is part of Whitehole.

    Whitehole is free software: you can redistribute it and/or modify it under
    the terms of the GNU General Public License as published by the Free
    Software Foundation, either version 3 of the License, or (at your option)
    any later version.

    Whitehole is distributed in the hope that it will be useful, but WITHOUT ANY 
    WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS 
    FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.

    You should have received a copy of the GNU General Public License along 
    with Whitehole. If not, see http://www.gnu.org/licenses/.
*/

package whitehole;

import java.io.IOException;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.*;
import whitehole.fileio.*;
import whitehole.smg.Bcsv;

public class BcsvEditorForm extends javax.swing.JFrame
{

    /**
     * Creates new form BcsvEditorForm
     */
    public BcsvEditorForm()
    {
        initComponents();
        
        archive = null;
        bcsv = null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jLabel1 = new javax.swing.JLabel();
        tbArchiveName = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jLabel2 = new javax.swing.JLabel();
        tbFileName = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        btnOpen = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        btnSave = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        btnAddRow = new javax.swing.JButton();
        btnDeleteRow = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBcsv = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("BCSV editor");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jLabel1.setText("Archive: ");
        jToolBar1.add(jLabel1);

        tbArchiveName.setText("/StageData/HeavenlyBeachGalaxy/HeavenlyBeachGalaxyScenario.arc");
        jToolBar1.add(tbArchiveName);
        jToolBar1.add(jSeparator2);

        jLabel2.setText("File: ");
        jToolBar1.add(jLabel2);

        tbFileName.setText("/heavenlybeachgalaxyscenario/scenariodata.bcsv");
        tbFileName.setToolTipText("");
        jToolBar1.add(tbFileName);
        jToolBar1.add(jSeparator1);

        btnOpen.setText("Open");
        btnOpen.setFocusable(false);
        btnOpen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnOpen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenActionPerformed(evt);
            }
        });
        jToolBar1.add(btnOpen);
        jToolBar1.add(jSeparator3);

        btnSave.setText("Save");
        btnSave.setFocusable(false);
        btnSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSave);
        jToolBar1.add(jSeparator4);

        btnAddRow.setText("Add row");
        btnAddRow.setFocusable(false);
        btnAddRow.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAddRow.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAddRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRowActionPerformed(evt);
            }
        });
        jToolBar1.add(btnAddRow);

        btnDeleteRow.setText("Delete row");
        btnDeleteRow.setFocusable(false);
        btnDeleteRow.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDeleteRow.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDeleteRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteRowActionPerformed(evt);
            }
        });
        jToolBar1.add(btnDeleteRow);

        tblBcsv.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblBcsv.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(tblBcsv);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 702, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOpenActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnOpenActionPerformed
    {//GEN-HEADEREND:event_btnOpenActionPerformed
        try
        {
            if (archive != null) archive.close();
            if (bcsv != null) bcsv.close();
            archive = null; bcsv = null;
            
            archive = new RarcFilesystem(Whitehole.game.filesystem.openFile(tbArchiveName.getText()));
            bcsv = new Bcsv(archive.openFile(tbFileName.getText()));
        }
        catch (IOException ex)
        {
            JOptionPane.showMessageDialog(this, "Failed to open BCSV file: "+ex.getMessage(), Whitehole.name, JOptionPane.ERROR_MESSAGE);
            try
            {
                if (bcsv != null) bcsv.close();
                if (archive != null) archive.close();
            } catch (IOException ex2) {}
            bcsv = null; archive = null;
            return;
        }
        
        DefaultTableModel table = (DefaultTableModel)tblBcsv.getModel();
        table.setRowCount(0);
        table.setColumnCount(0);
        
        for (Bcsv.Field field : bcsv.fields.values())
        {
            table.addColumn(field.name);
        }
        
        for (Bcsv.Entry entry : bcsv.entries)
        {
            Vector<Object> row = new Vector<>(bcsv.fields.size());
            for (Bcsv.Field field : bcsv.fields.values())
            {
                Object val = entry.get(field.nameHash);
                /*if (val.getClass() == Integer.class)
                {
                    long _val = (long)(int)val;
                    _val &= 0xFFFFFFFFL;
                    row.add(_val);
                }
                else*/
                    row.add(val);
            }
            table.addRow(row);
        }
    }//GEN-LAST:event_btnOpenActionPerformed

    private void btnAddRowActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnAddRowActionPerformed
    {//GEN-HEADEREND:event_btnAddRowActionPerformed
        DefaultTableModel table = (DefaultTableModel)tblBcsv.getModel();
        table.addRow((Object[])null);
    }//GEN-LAST:event_btnAddRowActionPerformed

    private void btnDeleteRowActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnDeleteRowActionPerformed
    {//GEN-HEADEREND:event_btnDeleteRowActionPerformed
        int sel = tblBcsv.getSelectedRow();
        if (sel < 0) return;
        
        DefaultTableModel table = (DefaultTableModel)tblBcsv.getModel();
        table.removeRow(sel);
    }//GEN-LAST:event_btnDeleteRowActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosing
    {//GEN-HEADEREND:event_formWindowClosing
        try
        {
            if (bcsv != null) bcsv.close();
            if (archive != null) archive.close();
        } catch (IOException ex) {}
    }//GEN-LAST:event_formWindowClosing

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnSaveActionPerformed
    {//GEN-HEADEREND:event_btnSaveActionPerformed
        bcsv.entries.clear();
        
        for (int r = 0; r < tblBcsv.getRowCount(); r++)
        {
            Bcsv.Entry entry = new Bcsv.Entry();
            
            int c = 0;
            for (Bcsv.Field field : bcsv.fields.values())
            {
                Object valobj = tblBcsv.getValueAt(r, c);
                String val = (valobj == null) ? "" : valobj.toString();
                
                try
                {
                    switch (field.type)
                    {
                        case 0:
                        case 3:
                            entry.put(field.nameHash, Integer.parseInt(val));
                            break;

                        case 4:
                            entry.put(field.nameHash, Short.parseShort(val));
                            break;

                        case 5:
                            entry.put(field.nameHash, Byte.parseByte(val));
                            break;

                        case 2:
                            entry.put(field.nameHash, Float.parseFloat(val));
                            break;

                        case 6:
                            entry.put(field.nameHash, val);
                            break;
                    }
                }
                catch (NumberFormatException ex)
                {
                    switch (field.type)
                    {
                        case 0:
                        case 3: entry.put(field.nameHash, (int)0); break;
                        case 4: entry.put(field.nameHash, (short)0); break;
                        case 5: entry.put(field.nameHash, (byte)0); break;
                        case 2: entry.put(field.nameHash, 0f); break;
                        case 6: entry.put(field.nameHash, ""); break;
                    }
                }
                
                c++;
            }
            
            bcsv.entries.add(entry);
        }
        
        try { bcsv.save(); archive.save(); }
        catch (IOException ex) { System.out.println(ex.getMessage()); ex.printStackTrace(); }
    }//GEN-LAST:event_btnSaveActionPerformed

    private FilesystemBase archive;
    private Bcsv bcsv;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddRow;
    private javax.swing.JButton btnDeleteRow;
    private javax.swing.JButton btnOpen;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTextField tbArchiveName;
    private javax.swing.JTextField tbFileName;
    private javax.swing.JTable tblBcsv;
    // End of variables declaration//GEN-END:variables
}
